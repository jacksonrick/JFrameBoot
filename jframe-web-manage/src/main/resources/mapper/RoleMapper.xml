<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jf.mapper.RoleMapper">

	<sql id="simpleColumn">
		r.name,
		r.flag,
		r.deleted AS role_delete
	</sql>

	<sql id="baseColumn">
		r.id,
		r.name,
		r.rights,
		r.flag,
		r.deleted
	</sql>

	<resultMap type="com.jf.database.model.manage.Role" id="roleResultMap">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="rights" column="rights" />
		<result property="deleted" column="deleted" />
		<result property="flag" column="flag" />
	</resultMap>

	<select id="findAll" resultMap="roleResultMap">
		SELECT <include refid="baseColumn"></include>
		FROM s_role r
	</select>

	<select id="checkRights" resultType="int">
		SELECT COUNT(1)
		FROM s_module
		WHERE FIND_IN_SET(id, (SELECT rights FROM s_role WHERE id = #{roleId}))
		AND action = #{action}
	</select>
	<!-- For PG: WHERE ARRAYCONTAINED(ARRAY[CAST(id AS TEXT)], (SELECT STRING_TO_ARRAY(rights, ',') FROM s_role WHERE id = #{roleId})) -->

	<insert id="insert" parameterType="com.jf.database.model.manage.Role">
		INSERT INTO s_role (name) VALUES (#{name})
	</insert>

	<update id="update" parameterType="com.jf.database.model.manage.Role">
		UPDATE s_role
		<set>
			<if test="name != null and name != ''">name = #{name},</if>
			<if test="rights != null">rights = #{rights},</if>
		</set>
		WHERE id = #{id}
	</update>

    <update id="delete" parameterType="int">
        UPDATE s_role SET deleted = !deleted
        WHERE id = #{id}
    </update>
	<!-- For PG: UPDATE s_role SET deleted = NOT deleted -->

</mapper>